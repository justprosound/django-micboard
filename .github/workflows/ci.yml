name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    if: "!startsWith(github.head_ref, 'renovate/') && !startsWith(github.ref, 'refs/heads/renovate/')"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
        django-version: ["4.2", "5.0", "5.1"]
        exclude:
          # Django 5.0+ requires Python 3.10+
          - python-version: "3.9"
            django-version: "5.0"
          - python-version: "3.9"
            django-version: "5.1"

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install Django~=${{ matrix.django-version }}
        pip install -e .[dev]

    - name: Run ruff
      run: |
        ruff check .
        ruff format --check .

    - name: Run mypy
      run: mypy micboard/ --ignore-missing-imports

    - name: Run bandit security scan
      run: bandit -r micboard/ -c pyproject.toml

    - name: Run safety dependency scan
      run: safety check --full-report

    - name: Run tests with coverage
      run: pytest tests/ -v --tb=short --cov=micboard --cov-report=lcov

    - name: Upload coverage to Coveralls
      uses: coverallsapp/github-action@v2
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-lcov: ./coverage.lcov

  build:
    if: "!startsWith(github.head_ref, 'renovate/') && !startsWith(github.ref, 'refs/heads/renovate/')"
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
        cache: 'pip'

    - name: Install build tools
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: python -m build

    - name: Check package
      run: twine check dist/*

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/
