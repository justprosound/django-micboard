[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "django-micboard"
version = "25.10.15"  # CalVer: YY.MM.DD
description = "Django app for real-time Shure wireless microphone monitoring via Shure System API"
readme = "README.md"
license = {text = "AGPL-3.0-or-later"}
authors = [
    {name = "django-micboard contributors"}
]
maintainers = [
    {name = "django-micboard contributors"}
]
keywords = [
    "django",
    "shure",
    "wireless",
    "microphone",
    "monitoring",
    "audio",
    "real-time",
    "websocket"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Web Environment",
    "Framework :: Django",
    "Framework :: Django :: 4.2",
    "Framework :: Django :: 5.0",
    "Framework :: Django :: 5.1",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Multimedia :: Sound/Audio",
]
requires-python = ">=3.9"

dependencies = [
    "Django>=4.2,<6.0",
    "channels>=4.0.0,<5.0",
    "daphne>=4.0.0,<5.0",
    "requests>=2.31.0",
    "asgiref>=3.7.0",
    "urllib3>=2.0.0",
    "websockets>=12.0.0",
]

[project.optional-dependencies]
redis = [
    "channels-redis>=4.0.0,<5.0",
    "redis>=5.0.0",
]
dev = [
    "pytest>=8.0.0",
    "pytest-django>=4.5.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "ruff>=0.14.0,<0.15.0",
    "mypy>=1.8.0",
    "pre-commit>=3.6.0",
    "pip-tools>=7.0.0",
    "build>=1.0.0",
    "twine>=5.0.0",
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.5.0",
    "bandit>=1.7.0",
    "safety>=2.3.0",
    "coveralls>=3.3.1",
    "types-requests",
]

[project.urls]
Homepage = "https://github.com/justprosound/django-micboard"
Documentation = "https://django-micboard.readthedocs.io"
Repository = "https://github.com/justprosound/django-micboard"
Changelog = "https://github.com/justprosound/django-micboard/blob/main/docs/changelog.md"
"Issue Tracker" = "https://github.com/justprosound/django-micboard/issues"

[tool.setuptools]
packages = ["micboard"]
include-package-data = true

[tool.setuptools.package-data]
micboard = [
    "static/**/*",
    "templates/**/*",
    "management/commands/*.py",
]

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "tests.settings"
python_files = ["test_*.py", "*_test.py"]
testpaths = ["tests"]
addopts = [
    "--verbose",
    "--strict-markers",
    "--tb=short",
]

[tool.ruff]
line-length = 100
target-version = "py39"
exclude = [
    ".git",
    ".venv",
    "migrations",
    "__pycache__",
    "micboard/views.py",
]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "W",   # pycodestyle warnings
    "I",   # isort
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "A",   # flake8-builtins
    "C4",  # flake8-comprehensions
    "DTZ", # flake8-datetimez
    "DJ",  # flake8-django
    "RUF", # Ruff-specific rules
]
ignore = [
    "E501",  # Line too long (handled by formatter)
    "DJ001", # Null on string field (intentional for optional fields)
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # Unused imports in __init__
"tests/**/*.py" = ["ARG", "S"]  # Allow unused args and security issues in tests

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
strict_optional = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.bandit]
exclude_dirs = ["tests", "migrations", "__pycache__"]
skips = ["B101", "B601"]  # Skip assert checks and shell usage in admin commands

[tool.codespell]
ignore-words-list = ["Shure", "shure", "assertIn"]
