# Generated by Django 5.2.7 on 2025-10-28 20:57

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('micboard', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Charger',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('api_device_id', models.CharField(help_text="Unique identifier from the manufacturer's API", max_length=100)),
                ('ip', models.GenericIPAddressField(help_text='IP address of the charger', unique=True)),
                ('device_type', models.CharField(choices=[('SBC250', 'SBC 250'), ('SBC850', 'SBC 850'), ('MXWNCS8', 'MXW NCS 8'), ('MXWNCS4', 'MXW NCS 4'), ('SBC220', 'SBC 220')], help_text='Type of charger', max_length=10)),
                ('name', models.CharField(blank=True, help_text='Human-readable name for the charger', max_length=100)),
                ('firmware_version', models.CharField(blank=True, help_text='Firmware version of the charger', max_length=50)),
                ('order', models.PositiveIntegerField(default=0, help_text='Display order for charger layouts')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this charger is currently active/online')),
                ('last_seen', models.DateTimeField(blank=True, help_text='Last time this charger was successfully polled', null=True)),
                ('location', models.ForeignKey(blank=True, help_text='The physical location of this charger', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='chargers', to='micboard.location')),
                ('manufacturer', models.ForeignKey(help_text='The manufacturer of this charger', on_delete=django.db.models.deletion.CASCADE, to='micboard.manufacturer')),
            ],
            options={
                'verbose_name': 'Charger',
                'verbose_name_plural': 'Chargers',
                'ordering': ['order', 'manufacturer__name', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ChargerSlot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slot_number', models.PositiveIntegerField(help_text='Slot number within the charger')),
                ('is_occupied', models.BooleanField(default=False, help_text='Whether the slot has a transmitter')),
                ('charging_status', models.BooleanField(default=False, help_text='Whether charging is active')),
                ('charger', models.ForeignKey(help_text='The charger this slot belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='slots', to='micboard.charger')),
                ('transmitter', models.OneToOneField(blank=True, help_text='Transmitter currently in this slot', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='charger_slot', to='micboard.transmitter')),
            ],
            options={
                'verbose_name': 'Charger Slot',
                'verbose_name_plural': 'Charger Slots',
                'ordering': ['charger', 'slot_number'],
            },
        ),
        migrations.AddIndex(
            model_name='charger',
            index=models.Index(fields=['manufacturer', 'api_device_id'], name='micboard_ch_manufac_281583_idx'),
        ),
        migrations.AddIndex(
            model_name='charger',
            index=models.Index(fields=['is_active', 'last_seen'], name='micboard_ch_is_acti_f1584b_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='charger',
            unique_together={('manufacturer', 'api_device_id')},
        ),
        migrations.AlterUniqueTogether(
            name='chargerslot',
            unique_together={('charger', 'slot_number')},
        ),
    ]
